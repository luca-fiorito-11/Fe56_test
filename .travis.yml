language: python

env:
  global:
    - FILENAME=26-Fe-56g.jeff33
    - CACHEDIR=mycache

python:
  - "3.6"

cache:
  directories:
    - ${CACHEDIR}

branches:
  except:
    - gh-pages

stages:
  - cache
  - parse
#  - utils
  - processing
  - deploy

jobs:
  include:

    - stage: cache
      name: setup cache directory
      install:
        - rm -rf ${CACHEDIR}
        - mkdir -p ${CACHEDIR}/html
        - "echo \"$TRAVIS_BUILD_ID\" | tee ${CACHEDIR}/travis_build_id"
        - "echo 'theme: jekyll-theme-cayman' > ${CACHEDIR}/html/_config.yml"
        - ( cd ${CACHEDIR} && git clone https://github.com/luca-fiorito-11/PVBV_utils.git )
      script: skip


    - stage: parse
      name: openmc
      install:
        - bash ${CACHEDIR}/PVBV_utils/install_openmc.sh
        - export PYTHONPATH="openmc:${PYTHONPATH}"
      script:
        - python ${CACHEDIR}/PVBV_utils/openmc_to_html.py $FILENAME > ${CACHEDIR}/html/index.html


#    - stage: utils
#      name: fizcon
#      install: bash ${CACHEDIR}/PVBV_utils/install_fizcon.sh
#      script: echo -e "$FILENAME\nFIZCON.OUT\n\nDONE" |./fizcon-linux-64

#    - stage: utils
#      name: checkr
#      install: bash ${CACHEDIR}/PVBV_utils/install_checkr.sh
#      script: echo -e "$FILENAME\nCHECKR.OUT\n\nDONE" | ./checkr-linux-64

#    - stage: utils
#      name: psyche
#      install: bash ${CACHEDIR}/PVBV_utils/install_psyche.sh
#      script: echo -e "$FILENAME\nPSYCHE.OUT\n\nDONE" | ./psyche-linux-64


    - stage: processing
      name: njoy
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gfortran-5
            - xsltproc
      env:
        - FC='gfortran-5'
        - NJOY_TOLER=0.1   # Reconstruction tolerance
        - NJOY_TEMP=293.6  # Processing temperature (K)
        - NJOY_EMAX=10     # Maximum energy for thermal treatment (eV)
        - NJOY_ACE_SUFF=03 # ACE file suffix
      before_install:
        - pip install "pandas>=0.23"
      install:
        - bash ${CACHEDIR}/PVBV_utils/install_njoy.sh
        - bash ${CACHEDIR}/PVBV_utils/install_inter.sh
      script:
        - bash ${CACHEDIR}/PVBV_utils/run_njoy.sh $FILENAME
        - echo -e "${FILENAME}.pendf\nINTER.OUT\n\nDONE" | ./inter-linux-64
      after_success:
        - xsltproc ${CACHEDIR}/PVBV_utils/njoy_to_html.xsl <( ${CACHEDIR}/PVBV_utils/parse_njoy_messages.sh output ) | sed '1d;$d' > ${CACHEDIR}/html/njoy_output.html
        - python ${CACHEDIR}/PVBV_utils/inter_to_html.py <(sed '1,/^Material number/d' INTER.OUT | sed '2d') > ${CACHEDIR}/html/inter_output.html
        - git tag "$(date +'%Y%m%d')-$(git log --format=%h -1)-$(git log --format=%an -1 | tr " " "-")"


    - stage: deploy
      name: deploy to GitHub pages
      script: skip
      deploy:
#        - provider: releases
#          api-key: $GITHUB_TOKEN
#          file:
#            - ${FILENAME}.ace 
#            - ${FILENAME}.pendf 
#          skip_cleanup: true
        - provider: pages
          skip-cleanup: true
          github-token: $GITHUB_TOKEN
          keep-history: true
          local-dir: ${CACHEDIR}/html
          overwrite: no
#    - stage: inter
#      sudo: required
#      name: inter
#      before_install:
#        - TAG="$(date +'%Y%m%d')-$(date +'%H%M')-$(git log --format=%h -1)-$(git log --format=%an -1 | tr " " "-")"
#        - REMOTE_URL=$(url=$(git ls-remote --get-url);echo ${url%.*})
#        - curl --verbose -O "${REMOTE_URL}/releases/download/${TAG}/${FILENAME}.pendf"
#      install:
#        - curl --verbose -O "https://www-nds.iaea.org/public/endf/utility/bin/inter-linux-64"
#        - chmod 777 inter-linux-64
#      script:
#        - echo -e "26-Fe-56g.jeff33.pendf\nINTER.OUT\n\nDONE" | ./inter-linux-64
